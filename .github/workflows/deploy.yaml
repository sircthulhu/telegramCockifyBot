name: Build and deploy

env:
  DEPLOY_PATH: /var/www/cockify/
  DEPLOY_FILENAME: server
  SERVICE_NAME: cockify.service

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Get dependencies
        run: go mod download

      - name: Build application
        run: env GOOS=linux GOARCH=amd64 go build src/main.go

      - name: Rename binary file
        run: mv main $DEPLOY_FILENAME

      - name: Tar files
        run: tar -cvf server.tar $DEPLOY_FILENAME

      - name: Packing files
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: |
            server.tar
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: server

      - name: Copying files
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./server.tar
          remote_path: ${{ env.DEPLOY_PATH }}
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          envs: DEPLOY_PATH, SERVICE_NAME, DEPLOY_FILENAME
          script: |
            export DEPLOY_PATH=$DEPLOY_PATH
            export SERVICE_NAME=$SERVICE_NAME
            export DEPLOY_FILENAME=$DEPLOY_FILENAME
            cd $DEPLOY_PATH
            rm -f $DEPLOY_FILENAME
            tar -xvf server.tar
            chown -R $(whoami):www-data $DEPLOY_PATH
            sudo /bin/systemctl restart $SERVICE_NAME
            rm server.tar